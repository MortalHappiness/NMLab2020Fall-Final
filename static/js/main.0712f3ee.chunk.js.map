{"version":3,"sources":["features/post/postSlice.js","features/answer/answerSlice.js","store/index.js","utils/getWeb3.js","contractApi.js","contractContext.js","components/appBar.js","utils/index.js","features/utils/textDisplayer.js","features/post/postItem.js","features/utils/textEditor.js","constant/tagList.js","features/post/addPostModal.js","features/post/postList.js","features/tagList/index.js","features/user/ranking.js","features/pages/mainPage.js","features/post/post.js","features/answer/answerItem.js","features/answer/answerList.js","features/answer/addAnswerModal.js","features/pages/postPage.js","features/pages/userPage.js","App.js","Web3.js","serviceWorker.js","index.js"],"names":["postSlice","createSlice","name","initialState","init","postList","reducers","setPostList","state","action","payload","map","ele","id","slice","reverse","actions","selectPost","post","answerSlice","answerList","setAnswerList","selectAnswer","answer","configureStore","reducer","postReducer","answerReducer","getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","ContractAPI","this","accounts","networkId","deployedNetwork","contract","gas","ACCOUNT_CREATE_ETHER_FEE","TOKEN_VALUE","INIT_TOKENS","MIN_POST_CREATE_TOKEN_FEE","EXPIRE_TIME","eth","getAccounts","net","getId","AppContract","networks","Contract","abi","address","initConstant","getAccountCreateEtherFee","getTokenValue","getInitTokens","getMinPostCreateTokenFee","getExpireTime","methods","call","title","content","tokens","tags","addPost","send","from","getPosts","postIds","getPostsByIds","postId","addAnswer","getAnswers","answerIds","getAnswersByIds","answerId","increaseUpVotes","increaseDownVotes","createAccount","value","getAccountInfo","ether","ether2token","token2ether","getUsers","requestForExpire","ContractContext","createContext","children","useState","contractAPI","setContractAPI","useEffect","api","Provider","useStyles","makeStyles","theme","root","flexGrow","menuButton","menuIcon","width","spacing","height","flex","cursor","offset","mixins","toolbar","userName","breakpoints","down","display","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","classes","history","useHistory","open","message","status","snackbarProp","setSnackbarProp","useContext","handleSignUp","location","reload","error","isUser","setIsUser","userDisplay","setUserDisplay","res","userAddress","className","position","color","Toolbar","style","minHeight","IconButton","edge","aria-label","src","Typography","variant","onClick","push","Button","component","Link","to","noWrap","Snackbar","autoHideDuration","onClose","Alert","severity","relativeTime","require","timeFromNow","timestamp","dayjs","fromNow","getBlockStyle","block","getType","RichDisplayer","props","displayerState","blockStyleFn","editorState","readOnly","marginBottom","marginTop","chip","marginLeft","marginRight","PostItem","author","displayTime","EditorState","createEmpty","setDisplayerState","createWithContent","convertFromRaw","JSON","parse","Card","CardActionArea","CardContent","CardActions","disableSpacing","Box","tag","Chip","size","label","key","RichEditor","focus","refs","editor","onChange","setEditorState","handleKeyCommand","command","_handleKeyCommand","onTab","e","_onTab","toggleBlockType","type","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","newState","RichUtils","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","onToggle","customStyleMap","styleMap","placeholder","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","tagList","typography","textAlign","postTitle","tokenTextFiled","margin","box","border","borderRadius","none","AddPostModal","addPostDialogOpen","setAddPostDialogOpen","setNewPost","setTitle","token","setToken","userToken","setUserToken","chosedTagList","setChosedTagList","unchosedTagList","setUnchosedTagList","user","Dialog","scroll","fullWidth","maxWidth","DialogTitle","DialogContent","dividers","TextField","currentTarget","InputLabelProps","shrink","inputProps","min","InputProps","endAdornment","InputAdornment","mt","mb","idx","filter","_tag","handleRemoveTag","handleAddTag","DialogActions","Number","confirmed","disabled","PostList","dispatch","useDispatch","useSelector","postFilter","newPost","handleAddPost","stringify","convertToRaw","fetchPostList","flexDirection","some","TagList","setPostFilter","ranking","alignItems","Ranking","rankingList","setRankingList","tmp","r","votes","parseInt","totalUpVotes","totalDownVotes","sort","b","List","ListItem","button","paddingRight","paddingLeft","Divider","justifyContent","flexBasis","Main","Container","answerBtn","avatar","requestExpireBtn","Post","setAddAnswerDialogOpen","isExpired","expireTime","setExpireTime","handleRequestExpire","CardHeader","Avatar","subheader","titleTypographyProps","subheaderTypographyProps","Date","now","thumbUp","thumbUpIcon","cardHeader","AnswerItem","downVotes","upVotes","upVoteCnt","setUpVoteCnt","downVoteCnt","setDownVoteCnt","handleClickUpThumb","handleClickDownThumb","AnswerList","fetchAnswerList","length","AddAnswerModal","addAnswerDialogOpen","handleAddAnswer","PostPage","postid","useParams","setPost","getRes","UserPage","userid","setTokens","setPostIds","setIssuedAnswerIds","setTotalUpVotes","setUpVotedAnswerIds","setTotalDownVotes","setDownVotedAnswerIds","setPosts","answers","setAnswers","setToken2ether","setOpen","handleClose","handleToken2Ether","setEther","openEther","setOpenEther","handleCloseEther","handleEther2Token","accountInfo","issuedAnswerIds","upVotedAnswerIds","downVotedAnswerIds","fetchPosts","fetchAnswers","ListItemText","parentPostId","aria-labelledby","DialogContentText","autoFocus","required","target","createMuiTheme","h1","h2","h3","h4","h5","h6","palette","primary","main","MyRoute","basename","process","path","App","store","ThemeProvider","CssBaseline","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0712f3ee.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    init: false,\n    postList: [],\n  },\n  reducers: {\n    setPostList: (state, action) => {\n      state.postList = action.payload\n        .map((ele, id) => ({ ...ele, id }))\n        .slice()\n        .reverse();\n    },\n  },\n});\n\nexport const { setPostList } = postSlice.actions;\n\nexport const selectPost = (state) => state.post;\n\nexport default postSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const answerSlice = createSlice({\n  name: \"answer\",\n  initialState: {\n    answerList: [],\n  },\n  reducers: {\n    setAnswerList: (state, action) => {\n      state.answerList = action.payload.slice().reverse();\n    },\n  },\n});\n\nexport const { setAnswerList } = answerSlice.actions;\n\nexport const selectAnswer = (state) => state.answer;\n\nexport default answerSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"../features/post/postSlice\";\nimport answerReducer from \"../features/answer/answerSlice\";\n// import counterReducer from \"../features/counter/counterSlice\";\n\nexport default configureStore({\n  reducer: {\n    // counter: counterReducer,\n    post: postReducer,\n    answer: answerReducer,\n  },\n});\n","import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const { web3 } = window;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:7545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\n// For Testing\n// const getWeb3 = () =>\n//   new Promise((resolve, reject) => {\n//     const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n//     const web3 = new Web3(provider);\n//     console.log(\"No web3 instance injected, using Local web3.\");\n//     resolve(web3);\n//   });\nexport default getWeb3;\n","import AppContract from \"./contracts/App.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nclass ContractAPI {\n  constructor() {\n    this.web3 = null;\n    this.accounts = null;\n    this.networkId = null;\n    this.deployedNetwork = null;\n    this.contract = null;\n\n    this.gas = 1000000;\n\n    // constant\n    this.ACCOUNT_CREATE_ETHER_FEE = null;\n    this.TOKEN_VALUE = null;\n    this.INIT_TOKENS = null;\n    this.MIN_POST_CREATE_TOKEN_FEE = null;\n    this.EXPIRE_TIME = null;\n  }\n\n  // initialize function\n  async init() {\n    this.web3 = await getWeb3();\n    this.accounts = await this.web3.eth.getAccounts();\n    this.networkId = await this.web3.eth.net.getId();\n    this.deployedNetwork = AppContract.networks[this.networkId];\n    this.contract = new this.web3.eth.Contract(\n      AppContract.abi,\n      this.deployedNetwork && this.deployedNetwork.address\n    );\n    // console.log(this.web3, this.accounts, this.networkId, this.contract);\n    this.initConstant();\n  }\n\n  async initConstant() {\n    this.ACCOUNT_CREATE_ETHER_FEE = await this.getAccountCreateEtherFee();\n    this.TOKEN_VALUE = await this.getTokenValue();\n    this.INIT_TOKENS = await this.getInitTokens();\n    this.MIN_POST_CREATE_TOKEN_FEE = await this.getMinPostCreateTokenFee();\n    this.EXPIRE_TIME = await this.getExpireTime();\n    console.log(\n      this.ACCOUNT_CREATE_ETHER_FEE,\n      this.TOKEN_VALUE,\n      this.INIT_TOKENS,\n      this.MIN_POST_CREATE_TOKEN_FEE,\n      this.EXPIRE_TIME\n    );\n  }\n\n  // getter function\n  getAccountCreateEtherFee() {\n    return this.contract.methods.getAccountCreateEtherFee().call();\n  }\n\n  getTokenValue() {\n    return this.contract.methods.getTokenValue().call();\n  }\n\n  getInitTokens() {\n    return this.contract.methods.getInitTokens().call();\n  }\n\n  getMinPostCreateTokenFee() {\n    return this.contract.methods.getMinPostCreateTokenFee().call();\n  }\n\n  getExpireTime() {\n    return this.contract.methods.getExpireTime().call();\n  }\n\n  // mutate function\n  addPost(title, content, tokens, tags) {\n    // assert(tokens > this.MIN_POST_CREATE_TOKEN_FEE);\n    return this.contract.methods\n      .addPost(title, content, tokens, tags)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  getPosts() {\n    return this.contract.methods.getPosts().call();\n  }\n\n  getPostsByIds(postIds) {\n    // array\n    return this.contract.methods.getPostsByIds(postIds).call();\n  }\n\n  addAnswer(postId, content) {\n    return this.contract.methods\n      .addAnswer(postId, content)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  getAnswers(postId) {\n    return this.contract.methods.getAnswers(postId).call();\n  }\n\n  getAnswersByIds(answerIds) {\n    // array\n    return this.contract.methods.getAnswersByIds(answerIds).call();\n  }\n\n  increaseUpVotes(answerId) {\n    return this.contract.methods\n      .increaseUpVotes(answerId)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  increaseDownVotes(answerId) {\n    return this.contract.methods\n      .increaseDownVotes(answerId)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  createAccount() {\n    return this.contract.methods.createAccount().send({\n      from: this.accounts[0],\n      value: this.ACCOUNT_CREATE_ETHER_FEE,\n      gas: this.gas,\n    });\n  }\n\n  getAccountInfo() {\n    return this.contract.methods.getAccountInfo().call({\n      from: this.accounts[0],\n    });\n  }\n\n  ether2token(ether) {\n    return this.contract.methods.ether2token().send({\n      from: this.accounts[0],\n      value: ether * this.TOKEN_VALUE,\n      gas: this.gas,\n    });\n  }\n\n  token2ether(tokens) {\n    return this.contract.methods.token2ether(tokens).send({\n      from: this.accounts[0],\n      gas: this.gas,\n    });\n  }\n\n  getUsers() {\n    return this.contract.methods.getUsers().call();\n  }\n\n  requestForExpire(postId) {\n    return this.contract.methods.requestForExpire(postId).send({\n      from: this.accounts[0],\n      gas: this.gas,\n    });\n  }\n}\n\nexport default ContractAPI;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport ContractAPI from \"./contractApi\";\n\nconst ContractContext = createContext(null);\n\nexport { ContractContext };\n\nexport default ({ children }) => {\n  const [contractAPI, setContractAPI] = useState(null);\n\n  useEffect(async () => {\n    const api = new ContractAPI();\n    await api.init();\n    setContractAPI(api);\n  }, []);\n  return (\n    <ContractContext.Provider value={contractAPI}>\n      {children}\n    </ContractContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport Bar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { ContractContext } from \"../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    // marginLeft: theme.spacing(1),\n  },\n  menuIcon: {\n    width: theme.spacing(4),\n    height: theme.spacing(4),\n  },\n  title: {\n    // marginLeft: theme.spacing(2),\n    flex: 1,\n    cursor: \"pointer\",\n  },\n  offset: theme.mixins.toolbar,\n  userName: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nfunction HideOnScroll({ children }) {\n  const trigger = useScrollTrigger();\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nexport default function AppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: \"\",\n    status: \"null\",\n  });\n  const contractAPI = useContext(ContractContext);\n  const handleClick = () => {\n    history.push(\"/\");\n  };\n  const handleSignUp = async () => {\n    try {\n      const res = await contractAPI.createAccount();\n      setSnackbarProp({\n        open: true,\n        message: `SignUp Successfully!`,\n        status: \"success\",\n      });\n      window.location.reload(false);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // user display\n  const [isUser, setIsUser] = useState(false);\n  const [userDisplay, setUserDisplay] = useState(\"Sign Up\");\n  useEffect(async () => {\n    if (contractAPI) {\n      try {\n        const res = await contractAPI.getAccountInfo();\n        setUserDisplay(res.userAddress);\n        setIsUser(true);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [contractAPI]);\n\n  return (\n    <div className={classes.root}>\n      <HideOnScroll>\n        <Bar position=\"fixed\" color=\"primary\">\n          <Toolbar style={{ minHeight: \"56px\" }}>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <img\n                className={classes.menuIcon}\n                src=\"/NMLab2020Fall-Final/logo.png\"\n              />\n            </IconButton>\n            <Typography\n              variant=\"h1\"\n              className={classes.title}\n              onClick={() => handleClick()}\n            >\n              知識+ D-App\n            </Typography>\n            {isUser ? (\n              <Button\n                color=\"inherit\"\n                component={Link}\n                to={`/user/${userDisplay}`}\n              >\n                <Typography className={classes.userName} noWrap>\n                  {userDisplay}\n                </Typography>\n              </Button>\n            ) : (\n              <Button color=\"inherit\" onClick={handleSignUp}>\n                {userDisplay}\n              </Button>\n            )}\n          </Toolbar>\n        </Bar>\n      </HideOnScroll>\n      <div className={classes.offset} />\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}\n      >\n        <Alert severity={snackbarProp.status}>{snackbarProp.message}</Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import * as dayjs from \"dayjs\";\n\nconst relativeTime = require(\"dayjs/plugin/relativeTime\");\n\nexport function timeFromNow(timestamp) {\n  dayjs.extend(relativeTime);\n  return dayjs.unix(timestamp).fromNow();\n}\n","import React, { useState } from 'react';\nimport { Editor } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport './textEditor.css'\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote': return 'RichEditor-blockquote';\n    default: return null;\n  }\n}\n\nconst RichDisplayer = (props) => {\n  const { displayerState } = props\n\n  return (\n    <div className=\"RichDisplayer-root\">\n      <div className=\"RichEditor-editor\">\n        <Editor\n          blockStyleFn={getBlockStyle}\n          editorState={displayerState}\n          readOnly\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default RichDisplayer;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { timeFromNow } from \"../../utils\";\n\nimport RichTextDisplayer from \"../utils/textDisplayer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  chip: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n    marginBottom: theme.spacing(0.5),\n  },\n}));\n\nconst PostItem = ({ title, content, author, tags, timestamp, id, tokens }) => {\n  const classes = useStyles();\n  const displayTime = timeFromNow(timestamp);\n\n  const [displayerState, setDisplayerState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  useEffect(() => {\n    if (content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\n      );\n    }\n  }, [content]);\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea component={Link} to={`/post/${id}`}>\n        <CardContent>\n          <Typography variant=\"h1\">\n            {\" \"}\n            <strong>\n              {title} [{tokens} csb]\n            </strong>{\" \"}\n          </Typography>\n          <RichTextDisplayer displayerState={displayerState} />\n          <Typography variant=\"body2\" color=\"textSecondary\" noWrap>\n            creator: {author}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {displayTime}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <Box>\n            {tags.map((tag) => (\n              <Chip\n                className={classes.chip}\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                label={tag}\n                key={tag}\n              />\n            ))}\n          </Box>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default PostItem;\n","import React, { useState } from 'react';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport './textEditor.css'\n\nclass RichEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {editorState: EditorState.createEmpty()};\n\n    this.focus = () => this.refs.editor.focus();\n    this.onChange = (editorState) => this.props.setEditorState(editorState);\n\n    this.handleKeyCommand = (command) => this._handleKeyCommand(command);\n    this.onTab = (e) => this._onTab(e);\n    this.toggleBlockType = (type) => this._toggleBlockType(type);\n    this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\n  }\n\n  _handleKeyCommand(command) {\n    const { editorState } = this.props;\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return true;\n    }\n    return false;\n  }\n\n  _onTab(e) {\n    const maxDepth = 4;\n    this.onChange(RichUtils.onTab(e, this.props.editorState, maxDepth));\n  }\n\n  _toggleBlockType(blockType) {\n    this.onChange(\n      RichUtils.toggleBlockType(\n        this.props.editorState,\n        blockType\n      )\n    );\n  }\n\n  _toggleInlineStyle(inlineStyle) {\n    this.onChange(\n      RichUtils.toggleInlineStyle(\n        this.props.editorState,\n        inlineStyle\n      )\n    );\n  }\n\n  render() {\n    const { editorState } = this.props;\n\n    // If the user changes block type before entering any text, we can\n    // either style the placeholder or hide it. Let's just hide it now.\n    let className = 'RichEditor-editor';\n    var contentState = editorState.getCurrentContent();\n    if (!contentState.hasText()) {\n      if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n        className += ' RichEditor-hidePlaceholder';\n      }\n    }\n\n    return (\n      <div className=\"RichEditor-root\">\n        <BlockStyleControls\n          editorState={editorState}\n          onToggle={this.toggleBlockType}\n        />\n        <InlineStyleControls\n          editorState={editorState}\n          onToggle={this.toggleInlineStyle}\n        />\n        <div className={className} onClick={this.focus}>\n          <Editor\n            blockStyleFn={getBlockStyle}\n            customStyleMap={styleMap}\n            editorState={editorState}\n            handleKeyCommand={this.handleKeyCommand}\n            onChange={this.onChange}\n            onTab={this.onTab}\n            placeholder=\"Write down your idea here...\"\n            ref=\"editor\"\n            spellCheck={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote': return 'RichEditor-blockquote';\n    default: return null;\n  }\n}\n\nclass StyleButton extends React.Component {\n  constructor() {\n    super();\n    this.onToggle = (e) => {\n      e.preventDefault();\n      this.props.onToggle(this.props.style);\n    };\n  }\n\n  render() {\n    let className = 'RichEditor-styleButton';\n    if (this.props.active) {\n      className += ' RichEditor-activeButton';\n    }\n\n    return (\n      <span className={className} onMouseDown={this.onToggle}>\n        {this.props.label}\n      </span>\n    );\n  }\n}\n\nconst BLOCK_TYPES = [\n  { label: 'H1', style: 'header-one' },\n  { label: 'H2', style: 'header-two' },\n  { label: 'H3', style: 'header-three' },\n  { label: 'H4', style: 'header-four' },\n  { label: 'H5', style: 'header-five' },\n  { label: 'H6', style: 'header-six' },\n  { label: '\"Blockquote\"', style: 'blockquote' },\n  { label: 'UL', style: 'unordered-list-item' },\n  { label: 'OL', style: 'ordered-list-item' },\n  { label: 'Code Block', style: 'code-block' },\n];\n\nconst BlockStyleControls = (props) => {\n  const { editorState } = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map((type) =>\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n\nvar INLINE_STYLES = [\n  { label: 'Bold', style: 'BOLD' },\n  { label: 'Italic', style: 'ITALIC' },\n  { label: 'Underline', style: 'UNDERLINE' },\n  { label: 'Monospace', style: 'CODE' },\n];\n\nconst InlineStyleControls = (props) => {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map(type =>\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RichEditor;","const tagList = [\n  \"Health\",\n  \"Business and Finance\",\n  \"Entertainment\",\n  \"Home\",\n  \"Family\",\n  \"Pets\",\n  \"Children\",\n  \"Government\",\n  \"Education\",\n  \"News\",\n  \"Travel\",\n  \"Vehicle\",\n  \"Electronic Product\",\n  \"Environment\",\n  \"Society\",\n  \"Science\",\n  \"Beauty\",\n  \"Art\",\n  \"Game\",\n  \"Sports\",\n  \"Computer\",\n  \"Food\",\n];\n\nexport default tagList;","import React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Box from \"@material-ui/core/Box\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport { Editor, EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\n\nimport { ContractContext } from \"../../contractContext\";\nimport RichTextEditor from \"../utils/textEditor\";\nimport tagList from \"../../constant/tagList\";\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(1),\n    color: \"#9999\",\n  },\n  postTitle: {\n    fontSize: \"26px\",\n  },\n  tokenTextFiled: {\n    marginTop: theme.spacing(2),\n    width: \"20%\",\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  box: {\n    border: \"solid #c4c4c4 1px\",\n    borderRadius: \"3px\",\n    padding: \"10px\",\n  },\n  none: {\n    color: \"#c4c4c4\",\n  },\n}));\n\nconst AddPostModal = (props) => {\n  const {\n    addPostDialogOpen,\n    setAddPostDialogOpen,\n    editorState,\n    setEditorState,\n    setNewPost,\n  } = props;\n\n  const classes = useStyles();\n  const contractAPI = useContext(ContractContext);\n  const [title, setTitle] = useState(\"\");\n  const [token, setToken] = useState(0);\n  const [userToken, setUserToken] = useState(0);\n  const [chosedTagList, setChosedTagList] = useState([]);\n  const [unchosedTagList, setUnchosedTagList] = useState(tagList);\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: \"\",\n    status: \"null\",\n  });\n\n  const handleAddButtonClick = () => {\n    if (Number(token) < contractAPI.MIN_POST_CREATE_TOKEN_FEE) {\n      setSnackbarProp({\n        open: true,\n        message: `The minimum amount of bounty is ${contractAPI.MIN_POST_CREATE_TOKEN_FEE}!`,\n        status: \"error\",\n      });\n      return;\n    }\n    if (Number(token) > userToken) {\n      setSnackbarProp({\n        open: true,\n        message: `Your tokens are not enough!`,\n        status: \"error\",\n      });\n      return;\n    }\n    setNewPost({\n      title,\n      tokens: Number(token),\n      tags: chosedTagList,\n      confirmed: true,\n    });\n    setAddPostDialogOpen(false);\n  };\n\n  const handleAddTag = (tag) => {\n    setChosedTagList([...chosedTagList, tag]);\n    setUnchosedTagList(unchosedTagList.filter((_tag) => _tag !== tag));\n  };\n\n  const handleRemoveTag = (tag) => {\n    setUnchosedTagList([...unchosedTagList, tag]);\n    setChosedTagList(chosedTagList.filter((_tag) => _tag !== tag));\n  };\n\n  useEffect(async () => {\n    if (contractAPI) {\n      try {\n        const user = await contractAPI.getAccountInfo();\n        setUserToken(user.tokens);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [contractAPI]);\n\n  return (\n    <Dialog\n      open={addPostDialogOpen}\n      onClose={() => setAddPostDialogOpen(false)}\n      scroll=\"paper\"\n      fullWidth\n      maxWidth=\"lg\"\n    >\n      <DialogTitle id=\"scroll-dialog-title\">\n        <Typography variant=\"h1\">Ask Question</Typography>\n      </DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          value={title}\n          variant=\"outlined\"\n          onChange={(e) => setTitle(e.currentTarget.value)}\n          InputLabelProps={{ shrink: false }}\n          inputProps={{ className: classes.postTitle }}\n          placeholder=\"Enter your title here\"\n          fullWidth\n        />\n        <TextField\n          className={classes.tokenTextFiled}\n          size=\"small\"\n          value={token}\n          onChange={(e) => setToken(e.currentTarget.value)}\n          label=\"Bounty\"\n          inputProps={{\n            type: \"number\",\n            min: contractAPI ? contractAPI.MIN_POST_CREATE_TOKEN_FEE : 0,\n          }}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">csb</InputAdornment>,\n          }}\n          variant=\"outlined\"\n        />\n        <Box mt={1} mb={1} className={classes.box}>\n          <Typography>Tags</Typography>\n          {chosedTagList.map((tag, idx) => (\n            <Chip\n              className={classes.chip}\n              variant=\"outlined\"\n              label={tag}\n              onClick={() => handleRemoveTag(tag)}\n              color=\"primary\"\n              key={`chipchosed_${idx}`}\n            />\n          ))}\n        </Box>\n        <Typography\n          variant=\"overline\"\n          display=\"block\"\n          className={classes.typography}\n        >\n          ---- Choose your tag from below ----\n        </Typography>\n        {unchosedTagList.map((tag, idx) => (\n          <Chip\n            className={classes.chip}\n            variant=\"outlined\"\n            label={tag}\n            onClick={() => handleAddTag(tag)}\n            color=\"primary\"\n            key={`chipunchosed_${idx}`}\n          />\n        ))}\n\n        <Box mt={2}>\n          <Typography\n            variant=\"overline\"\n            display=\"block\"\n            className={classes.typography}\n          >\n            ---- Describe your question below ----\n          </Typography>\n        </Box>\n        {editorState ? (\n          <RichTextEditor\n            editorState={editorState}\n            setEditorState={setEditorState}\n          />\n        ) : (\n          <></>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setAddPostDialogOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleAddButtonClick}\n          color=\"primary\"\n          disabled={!title}\n        >\n          Ask\n        </Button>\n      </DialogActions>\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}\n      >\n        <Alert severity={snackbarProp.status}>{snackbarProp.message}</Alert>\n      </Snackbar>\n    </Dialog>\n  );\n};\n\nexport default AddPostModal;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { EditorState, convertToRaw } from \"draft-js\";\n\nimport { selectPost, setPostList } from \"./postSlice\";\n// import { Web3Context } from \"../../Web3\";\nimport { ContractContext } from \"../../contractContext\";\n\nimport PostItem from \"./postItem\";\nimport AddPostModal from \"./addPostModal\";\n\nconst PostList = (props) => {\n  // Initialize\n  const dispatch = useDispatch();\n  const { postList } = useSelector(selectPost);\n  const contractAPI = useContext(ContractContext);\n  const { postFilter } = props;\n\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    tokens: 0,\n    tags: [],\n    confirmed: false,\n  });\n  const [addPostDialogOpen, setAddPostDialogOpen] = useState(false);\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: \"\",\n    status: \"null\",\n  });\n\n  // Ask Queston\n  const handleAddPost = async () => {\n    const payload = {\n      title: newPost.title,\n      content: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\n      tokens: newPost.tokens,\n      tags: newPost.tags,\n    };\n    // console.log('new post payload', payload)\n    try {\n      await contractAPI.addPost(\n        payload.title,\n        payload.content,\n        payload.tokens,\n        payload.tags\n      );\n      // console.log(res);\n      setSnackbarProp({\n        open: true,\n        message: `New question added!`,\n        status: \"success\",\n      });\n      // Refetch post\n      const fetchPostList = await contractAPI.getPosts();\n      dispatch(setPostList(fetchPostList));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    if (newPost && newPost.confirmed) handleAddPost();\n  }, [newPost]);\n\n  // useEffect(async () => {\n  //   if (contractAPI) {\n  //     const user = await contractAPI.getAccountInfo()\n  //     console.log('user', user.tokens)\n  //   }\n  // }, [contractAPI])\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Typography variant=\"h2\" style={{ flexGrow: 1 }}>\n          Questions\n        </Typography>\n        <Button\n          // className={classes.answerBtn}\n          size=\"medium\"\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={() => setAddPostDialogOpen(true)}\n        >\n          Ask Questions\n        </Button>\n      </div>\n      {postList\n        .filter((post) => {\n          if (!postFilter) return true;\n\n          return post.tags.some((tag) => tag === postFilter);\n        })\n        .map((post, idx) => (\n          <PostItem {...post} key={idx} />\n        ))}\n      <AddPostModal\n        addPostDialogOpen={addPostDialogOpen}\n        setAddPostDialogOpen={setAddPostDialogOpen}\n        editorState={editorState}\n        setEditorState={setEditorState}\n        setNewPost={setNewPost}\n      />\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}\n      >\n        <Alert severity={snackbarProp.status}>{snackbarProp.message}</Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default PostList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport tagList from '../../constant/tagList'\n\n// const tagList = [\n//   \"health\",\n//   \"Business and Finance\",\n//   \"Entertainment\",\n//   \"Home\",\n//   \"Family\",\n//   \"Pets\",\n//   \"Children\",\n//   \"Government\",\n//   \"Education\",\n//   \"News\",\n//   \"Travel\",\n//   \"Vehicle\",\n//   \"Electronic Product\",\n//   \"Environment\",\n//   \"Society\",\n//   \"Science\",\n//   \"Beauty\",\n//   \"Art\",\n//   \"Game\",\n//   \"Sports\",\n//   \"Computer\",\n//   \"Food\",\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  tag: {\n    marginTop: theme.spacing(1.5),\n    cursor: \"pointer\",\n  },\n}));\n\nconst TagList = (props) => {\n  const classes = useStyles();\n  const { setPostFilter } = props;\n  return (\n    <div>\n      <Typography variant=\"h2\" color=\"initial\">\n        Catagories\n      </Typography>\n      <Typography\n        className={classes.tag}\n        variant=\"body2\"\n        color=\"textSecondary\"\n        key='All'\n        onClick={() => setPostFilter(null)}\n      >\n        All\n      </Typography>\n      {tagList.map((tag) => (\n        <Typography\n          className={classes.tag}\n          variant=\"body2\"\n          color=\"textSecondary\"\n          key={tag}\n          onClick={() => setPostFilter(tag)}\n        >\n          {tag}\n        </Typography>\n      ))}\n    </div>\n  );\n};\n\nexport default TagList;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  ranking: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Ranking = () => {\n  const classes = useStyles();\n  const [rankingList, setRankingList] = useState([]);\n  const contractAPI = useContext(ContractContext);\n\n  useEffect(async () => {\n    if (contractAPI) {\n      const res = await contractAPI.getUsers();\n      const tmp = [];\n      res.map((r) => {\n        if (r.userAddress !== \"0x0000000000000000000000000000000000000000\")\n          tmp.push({\n            userAddress: r.userAddress,\n            votes: parseInt(r.totalUpVotes) - parseInt(r.totalDownVotes),\n          });\n      });\n      tmp.sort((a, b) => (a.votes < b.votes ? 1 : -1)).slice(0, 10);\n      setRankingList(tmp);\n    }\n  }, [contractAPI]);\n  return (\n    <div>\n      <Typography variant=\"h2\">Most Voted</Typography>\n      <List>\n        {rankingList.map(({ userAddress, votes }, idx) => (\n          <div key={idx}>\n            <ListItem\n              button\n              component={Link}\n              to={`/user/${userAddress}`}\n              style={{ paddingRight: 0, paddingLeft: 0 }}\n            >\n              <div className={classes.ranking}>\n                <Typography style={{ margin: 8 }} variant=\"h3\" color=\"initial\">\n                  <strong>{`${idx + 1}`}</strong>\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  style={{ flexGrow: 1 }}\n                  noWrap\n                >\n                  {userAddress}...\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  {votes}\n                </Typography>\n              </div>\n            </ListItem>\n            <Divider />\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Ranking;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport PostList from \"../post/postList\";\nimport TagList from \"../tagList\";\nimport Ranking from \"../user/ranking\";\nimport { setPostList } from \"../post/postSlice\";\n\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n    justifyContent: \"space-evenly\",\n  },\n  tagList: {\n    // width: \"20%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  postList: {\n    flexBasis: \"800px\",\n    // maxWidth: '60%',\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  ranking: {\n    flexBasis: \"180px\",\n    maxWidth: \"240px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const contractAPI = useContext(ContractContext);\n  const [postFilter, setPostFilter] = useState(null);\n\n  // Initialize Post List\n  useEffect(async () => {\n    if (contractAPI) {\n      const fetchPostList = await contractAPI.getPosts();\n      dispatch(setPostList(fetchPostList));\n    }\n  }, [contractAPI]);\n\n  return (\n    <Container className={classes.root}>\n      <div className={classes.tagList}>\n        <TagList setPostFilter={setPostFilter} />\n      </div>\n      <div className={classes.postList}>\n        <PostList postFilter={postFilter} />\n      </div>\n      <div className={classes.ranking}>\n        <Ranking />\n      </div>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { EditorState, convertFromRaw } from \"draft-js\";\nimport { timeFromNow } from \"../../utils\";\n\nimport RichTextDisplayer from \"../utils/textDisplayer\";\n\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  answerBtn: {\n    borderRadius: \"30px\",\n  },\n  avatar: {\n    backgroundColor: \"gray\",\n  },\n  chip: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n    marginBottom: theme.spacing(0.5),\n  },\n  requestExpireBtn: {},\n}));\n\nconst Post = ({\n  title,\n  content,\n  author,\n  tags,\n  id,\n  timestamp,\n  tokens,\n  setAddAnswerDialogOpen,\n  isExpired,\n}) => {\n  const classes = useStyles();\n  const displayTime = timeFromNow(timestamp);\n  const contractAPI = useContext(ContractContext);\n  const [expireTime, setExpireTime] = useState(180);\n  const [displayerState, setDisplayerState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  useEffect(() => {\n    if (content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\n      );\n    }\n  }, [content]);\n\n  useEffect(() => {\n    if (contractAPI) {\n      setExpireTime(parseInt(contractAPI.EXPIRE_TIME));\n    }\n  }, [contractAPI]);\n\n  // request for expire\n  const handleRequestExpire = async () => {\n    try {\n      const res = await contractAPI.requestForExpire(id);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            A\n          </Avatar>\n        }\n        subheader={displayTime}\n        title={author}\n        titleTypographyProps={{ noWrap: true }}\n        subheaderTypographyProps={{ noWrap: true }}\n      />\n      <CardContent>\n        <Typography variant=\"h1\">\n          <strong>\n            {title} [{tokens} csb]\n          </strong>\n        </Typography>\n        <RichTextDisplayer displayerState={displayerState} />\n        <Box>\n          {tags.map((tag) => (\n            <Chip\n              className={classes.chip}\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              label={tag}\n              key={tag}\n            />\n          ))}\n        </Box>\n      </CardContent>\n      <CardActions>\n        <Button\n          className={classes.answerBtn}\n          size=\"medium\"\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => setAddAnswerDialogOpen(true)}\n        >\n          + Answer\n        </Button>\n        {!isExpired && Date.now() / 1000 > parseInt(timestamp) + expireTime ? (\n          <Button\n            className={classes.requestExpireBtn}\n            size=\"medium\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            onClick={() => handleRequestExpire()}\n          >\n            Request for expired\n          </Button>\n        ) : isExpired ? (\n          <Button\n            className={classes.requestExpireBtn}\n            size=\"medium\"\n            disabled\n            color=\"secondary\"\n            variant=\"outlined\"\n          >\n            Expired\n          </Button>\n        ) : (\n          <Button\n            className={classes.requestExpireBtn}\n            size=\"medium\"\n            disabled\n            color=\"secondary\"\n            variant=\"outlined\"\n          >\n            Not yet expired\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { EditorState, convertFromRaw } from \"draft-js\";\n\nimport { timeFromNow } from \"../../utils\";\n\nimport { ContractContext } from \"../../contractContext\";\nimport RichTextDisplayer from \"../utils/textDisplayer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"block\",\n    border: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n  },\n  avatar: {\n    backgroundColor: \"gray\",\n  },\n  content: {\n    display: \"flex\",\n  },\n  thumbUp: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  thumbUpIcon: {\n    fontSize: theme.spacing(6),\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: theme.spacing(4),\n    },\n  },\n  cardHeader: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst AnswerItem = ({ id, content, author, timestamp, downVotes, upVotes }) => {\n  const classes = useStyles();\n  const contractAPI = useContext(ContractContext);\n  const [upVoteCnt, setUpVoteCnt] = useState(parseInt(upVotes)); // votes type are string!\n  const [downVoteCnt, setDownVoteCnt] = useState(parseInt(downVotes)); // votes type are string!\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: \"\",\n    status: \"null\",\n  });\n\n  const [displayerState, setDisplayerState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  const displayTime = timeFromNow(timestamp);\n  const handleClickUpThumb = async () => {\n    // Todo Revert, you have thumbed before\n    try {\n      await contractAPI.increaseUpVotes(id);\n      setSnackbarProp({\n        open: true,\n        message: `UpVote Successfully!`,\n        status: \"success\",\n      });\n      setUpVoteCnt(upVoteCnt + 1);\n    } catch (err) {\n      setSnackbarProp({\n        open: true,\n        message: `You shouldn't vote the same answer again !`,\n        status: \"error\",\n      });\n    }\n  };\n  const handleClickDownThumb = async () => {\n    // Todo Revert, you have thumbed before\n    try {\n      await contractAPI.increaseDownVotes(id);\n      setSnackbarProp({\n        open: true,\n        message: `DownVote Successfully!`,\n        status: \"success\",\n      });\n      setDownVoteCnt(downVoteCnt + 1);\n    } catch (err) {\n      setSnackbarProp({\n        open: true,\n        message: `You shouldn't vote the same answer again !`,\n        status: \"error\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\n      );\n    }\n  }, [content]);\n\n  return (\n    <ListItem className={classes.root} component={Card} variant=\"outlined\">\n      <div className={classes.content}>\n        <div className={classes.thumbUp}>\n          <IconButton\n            aria-label=\"This is a good answer\"\n            color=\"primary\"\n            onClick={handleClickUpThumb}\n          >\n            <ThumbUpIcon className={classes.thumbUpIcon} />\n          </IconButton>\n          <Typography variant=\"h3\" color=\"primary\">\n            {upVoteCnt}\n          </Typography>\n          <IconButton\n            aria-label=\"This is a bad answer\"\n            color=\"secondary\"\n            onClick={handleClickDownThumb}\n          >\n            <ThumbDownIcon className={classes.thumbUpIcon} />\n          </IconButton>\n          <Typography variant=\"h3\" color=\"secondary\">\n            {downVoteCnt}\n          </Typography>\n        </div>\n        <div style={{ width: \"100%\" }}>\n          <CardHeader\n            className={classes.cardHeader}\n            avatar={\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                A\n              </Avatar>\n            }\n            // action={\n            //   <IconButton aria-label=\"This is a good answer\">\n            //     <ThumbUpIcon />\n            //   </IconButton>\n            // }\n            title={author}\n            subheader={displayTime}\n          />\n          <CardContent>\n            <RichTextDisplayer displayerState={displayerState} />\n          </CardContent>\n        </div>\n      </div>\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}\n      >\n        <Alert severity={snackbarProp.status}>{snackbarProp.message}</Alert>\n      </Snackbar>\n    </ListItem>\n  );\n};\n\nexport default AnswerItem;\n","import React, { useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport AnswerItem from \"./answerItem\";\nimport { selectAnswer, setAnswerList } from \"./answerSlice\";\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  answerList: {\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    borderRadius: \"4px\",\n    padding: 0,\n  },\n}));\n\nconst AnswerList = ({ post }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const contractAPI = useContext(ContractContext);\n  const { answerList } = useSelector(selectAnswer);\n  useEffect(async () => {\n    if (post) {\n      const fetchAnswerList = await contractAPI.getAnswers(post.id);\n      // console.log(fetchAnswerList);\n      dispatch(setAnswerList(fetchAnswerList));\n    }\n  }, [post]);\n  return (\n    <div>\n      <Toolbar>\n        <Typography variant=\"h2\" color=\"initial\">\n          {answerList.length} answers\n        </Typography>\n      </Toolbar>\n      <List className={classes.answerList}>\n        {answerList.map((answer, idx) => (\n          <div key={idx}>\n            <AnswerItem {...answer} />\n            <Divider />\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default AnswerList;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { EditorState, convertFromRaw } from 'draft-js';\nimport RichTextDisplayer from '../utils/textDisplayer'\nimport RichTextEditor from '../utils/textEditor'\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(1),\n    color: \"#9999\"\n  }\n}));\n\nconst AddAnswerModal = (props) => {\n  const {\n    addAnswerDialogOpen,\n    setAddAnswerDialogOpen,\n    post,\n    editorState,\n    setEditorState,\n    handleAddAnswer\n  } = props;\n\n  const classes = useStyles();\n  const [displayerState, setDisplayerState] = useState(\n    () => EditorState.createEmpty(),\n  )\n\n  const handleAddButtonClick = () => {\n    handleAddAnswer();\n    setAddAnswerDialogOpen(false);\n  }\n\n  useEffect(() => {\n    if (post && post.content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(post.content)))\n      );\n    }\n  }, [post])\n\n  return (\n    <>\n      {\n        post ?\n          <Dialog\n            open={addAnswerDialogOpen}\n            onClose={() => setAddAnswerDialogOpen(false)}\n            scroll=\"body\"\n            fullWidth={true}\n            maxWidth=\"lg\"\n          >\n            <DialogTitle id=\"scroll-dialog-title\">\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h1\">\n                    <strong>\n                      {post.title} [{post.tokens} csb]\n                    </strong>\n                  </Typography>\n                  <RichTextDisplayer displayerState={displayerState} />\n                </CardContent>\n              </Card>\n            </DialogTitle>\n            <DialogContent dividers>\n              <Typography variant=\"overline\" display=\"block\" className={classes.typography}>\n                ---- Write your answer below ----\n              </Typography>\n              {editorState ?\n                <RichTextEditor editorState={editorState} setEditorState={setEditorState} /> :\n                <></>\n              }\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => setAddAnswerDialogOpen(false)} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleAddButtonClick} color=\"primary\">\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog> :\n          <></>\n      }\n    </>\n\n  )\n}\n\nexport default AddAnswerModal;","import React, { useState, useEffect, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { EditorState, convertToRaw } from \"draft-js\";\n\nimport Post from \"../post/post\";\nimport AnswerList from \"../answer/answerList\";\nimport AddAnswerModal from \"../answer/addAnswerModal\";\n\n// import { selectPost, setPostList } from \"../post/postSlice\";\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n    justifyContent: \"center\",\n  },\n  content: {\n    width: \"80%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst PostPage = () => {\n  const classes = useStyles();\n  const contractAPI = useContext(ContractContext);\n  const { postid } = useParams();\n\n  const [post, setPost] = useState(null);\n  const [addAnswerDialogOpen, setAddAnswerDialogOpen] = useState(false);\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: \"\",\n    status: \"null\",\n  });\n\n  const handleAddAnswer = async () => {\n    if (contractAPI && post) {\n      try {\n        const content = convertToRaw(editorState.getCurrentContent());\n        console.log(post.id);\n        const addRes = await contractAPI.addAnswer(\n          post.id,\n          JSON.stringify(content)\n        );\n        // console.log(addRes);\n        setEditorState(EditorState.createEmpty());\n        setSnackbarProp({\n          open: true,\n          message: `New answer added!`,\n          status: \"success\",\n        });\n        try {\n          const getRes = await contractAPI.getPostsByIds([postid]);\n          console.log(getRes);\n          setPost({ ...getRes[0], id: postid });\n        } catch (err) {\n          console.error(err);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  // Todo: Initialization (fetch post, get user info)\n  // Initialize Post\n  useEffect(async () => {\n    if (contractAPI) {\n      try {\n        const res = await contractAPI.getPostsByIds([postid]);\n        setPost({ ...res[0], id: postid });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [contractAPI]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.root}>\n        {post ? (\n          <div className={classes.content}>\n            <Post {...post} setAddAnswerDialogOpen={setAddAnswerDialogOpen} />\n            <AnswerList post={post} />\n          </div>\n        ) : (\n          \"Fetching Post ...\"\n        )}\n      </Container>\n\n      <AddAnswerModal\n        addAnswerDialogOpen={addAnswerDialogOpen}\n        setAddAnswerDialogOpen={setAddAnswerDialogOpen}\n        post={post}\n        editorState={editorState}\n        setEditorState={setEditorState}\n        handleAddAnswer={handleAddAnswer}\n      />\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}\n      >\n        <Alert severity={snackbarProp.status}>{snackbarProp.message}</Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default PostPage;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport AnswerItem from \"../answer/answerItem\";\n\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n    justifyContent: \"center\",\n  },\n  content: {\n    width: \"80%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst UserPage = () => {\n  const history = useHistory();\n  const classes = useStyles();\n  const contractAPI = useContext(ContractContext);\n\n  // Initial\n  const { userid } = useParams();\n\n  const [tokens, setTokens] = useState(0);\n  const [postIds, setPostIds] = useState([]);\n  const [issuedAnswerIds, setIssuedAnswerIds] = useState([]);\n  const [totalUpVotes, setTotalUpVotes] = useState(0);\n  const [upVotedAnswerIds, setUpVotedAnswerIds] = useState([]);\n  const [totalDownVotes, setTotalDownVotes] = useState(0);\n  const [downVotedAnswerIds, setDownVotedAnswerIds] = useState([]);\n\n  const [posts, setPosts] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: \"\",\n    status: \"null\",\n  });\n\n  // Token2Ether\n  const [token2ether, setToken2ether] = useState(0);\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToken2Ether = async () => {\n    try {\n      handleClose();\n      if (token2ether > tokens) throw \"Tokens not enough !\";\n      await contractAPI.token2ether(parseInt(token2ether));\n      init();\n      setSnackbarProp({\n        open: true,\n        message: \"token to ether success\",\n        status: \"success\",\n      });\n    } catch (err) {\n      console.error(err);\n      setSnackbarProp({\n        open: true,\n        message: err,\n        status: \"error\",\n      });\n    }\n  };\n  // ether2token\n  const [ether, setEther] = useState(0);\n  const [openEther, setOpenEther] = React.useState(false);\n\n  const handleClickOpenEther = () => {\n    setOpenEther(true);\n  };\n  const handleCloseEther = () => {\n    setOpenEther(false);\n  };\n  const handleEther2Token = async () => {\n    try {\n      handleCloseEther();\n      await contractAPI.ether2token(parseInt(ether));\n      init();\n      setSnackbarProp({\n        open: true,\n        message: \"token to ether success\",\n        status: \"success\",\n      });\n    } catch (err) {\n      console.error(err);\n      setSnackbarProp({\n        open: true,\n        message: err,\n        status: \"error\",\n      });\n    }\n  };\n\n  const init = async () => {\n    if (contractAPI) {\n      if (contractAPI.accounts[0] !== userid) {\n        history.push(`/user/${contractAPI.accounts[0]}`);\n      }\n      const accountInfo = await contractAPI.getAccountInfo();\n      setTokens(parseInt(accountInfo.tokens));\n      setPostIds(accountInfo.postIds);\n      setIssuedAnswerIds(accountInfo.issuedAnswerIds);\n      setUpVotedAnswerIds(accountInfo.upVotedAnswerIds);\n      setDownVotedAnswerIds(accountInfo.downVotedAnswerIds);\n      setTotalDownVotes(parseInt(accountInfo.totalDownVotes));\n      setTotalUpVotes(parseInt(accountInfo.totalUpVotes));\n\n      const fetchPosts = await contractAPI.getPostsByIds(accountInfo.postIds);\n      setPosts(fetchPosts);\n      const fetchAnswers = await contractAPI.getAnswersByIds(\n        accountInfo.issuedAnswerIds\n      );\n      setAnswers(fetchAnswers);\n    }\n  };\n\n  useEffect(async () => {\n    init();\n  }, [contractAPI]);\n  return (\n    <Container maxWidth=\"xl\" className={classes.root}>\n      <div className={classes.content}>\n        <Typography variant=\"h2\" noWrap>\n          User {userid}\n        </Typography>\n        <div>\n          <Typography variant=\"h2\">Tokens: {tokens}</Typography>\n          <Button variant=\"outlined\" onClick={handleClickOpen}>\n            Token to ether\n          </Button>{\" \"}\n          <Button variant=\"outlined\" onClick={handleClickOpenEther}>\n            Ether to token\n          </Button>\n        </div>\n        <br />\n        <Typography variant=\"h2\">Total Up Votes: {totalUpVotes}</Typography>\n        <Typography variant=\"h2\">Total Down Votes: {totalDownVotes}</Typography>\n        <Typography variant=\"h2\">IssuedPosts: </Typography>\n        <List>\n          <Divider />\n\n          {postIds.map((id, idx) => (\n            <div key={`post_${idx}`}>\n              <ListItem button component={Link} to={`/post/${id}`}>\n                <ListItemText>post {id}</ListItemText>\n              </ListItem>\n              <Divider />\n            </div>\n          ))}\n        </List>\n        <Typography variant=\"h2\">IssuedAnswers: </Typography>\n        <List>\n          {answers.map((answer, idx) => (\n            <div key={`answer_${idx}`}>\n              <Button component={Link} to={`/post/${answer.parentPostId}`}>\n                <Typography variant=\"h3\">\n                  From Post {answer.parentPostId}\n                </Typography>\n              </Button>\n              <div\n                style={{\n                  border: \"1px gray solid\",\n                  margin: \"8px\",\n                }}\n              >\n                <AnswerItem {...answer} />\n              </div>\n            </div>\n          ))}\n        </List>\n      </div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography variant=\"h2\">Token to Ether</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>Please Enter Token amount</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"token\"\n            label=\"Token\"\n            type=\"number\"\n            fullWidth\n            required\n            value={token2ether}\n            onChange={(e) => {\n              setToken2ether(e.target.value);\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleToken2Ether} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openEther}\n        onClose={handleCloseEther}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          <Typography variant=\"h2\">Ether to Token</Typography>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please Enter Ether amount (multiplied by{\" \"}\n            {contractAPI ? contractAPI.TOKEN_VALUE : 0.000001})\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"token\"\n            label=\"Ether\"\n            type=\"number\"\n            fullWidth\n            required\n            value={ether}\n            onChange={(e) => {\n              setEther(e.target.value);\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseEther} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleEther2Token} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}\n      >\n        <Alert severity={snackbarProp.status}>{snackbarProp.message}</Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default UserPage;\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport store from \"./store\";\nimport AppBar from \"./components/appBar\";\nimport Main from \"./features/pages/mainPage\";\nimport PostPage from \"./features/pages/postPage\";\nimport UserPage from \"./features/pages/userPage\";\n\nimport Web3Provider from \"./Web3\";\nimport ContractProvider from \"./contractContext\";\n\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  typography: {\n    // In Chinese and Japanese the characters are usually larger,\n    // so a smaller fontsize may be appropriate.\n    h1: {\n      fontSize: \"2rem\",\n    },\n    h2: {\n      fontSize: \"1.5rem\",\n    },\n    h3: {\n      fontSize: \"1.1rem\",\n    },\n    h4: {\n      fontSize: \"1rem\",\n    },\n    h5: {\n      fontSize: \"0.8rem\",\n    },\n    h6: {\n      fontSize: \"0.6rem\",\n    },\n    fontSize: 16,\n  },\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#006AC7\",\n    },\n  },\n});\n\nfunction MyRoute() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <AppBar />\n      <Switch>\n        <Route path=\"/post/:postid\">\n          <PostPage />\n        </Route>\n        <Route path=\"/user/:userid\">\n          <UserPage />\n        </Route>\n        <Route path=\"/\">\n          <Main />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ContractProvider>\n        {/* <Web3Provider> */}\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <MyRoute />\n        </ThemeProvider>\n        {/* </Web3Provider> */}\n      </ContractProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport AppContract from \"./contracts/App.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nconst Web3Context = createContext(null);\n\nexport { Web3Context };\n\nexport default ({ children }) => {\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  useEffect(async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = AppContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        AppContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n      console.log(accounts, networkId, deployedNetwork, instance);\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setContract(instance);\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  }, []);\n\n  return (\n    <Web3Context.Provider value={{ web3, accounts, contract }}>\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}