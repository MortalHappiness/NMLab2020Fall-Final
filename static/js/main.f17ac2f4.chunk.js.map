{"version":3,"sources":["features/post/postSlice.js","features/answer/answerSlice.js","store/index.js","utils/getWeb3.js","contractApi.js","contractContext.js","components/appBar.js","utils/index.js","features/utils/textDisplayer.js","features/post/postItem.js","features/utils/textEditor.js","constant/tagList.js","features/post/addPostModal.js","features/post/postList.js","features/tagList/index.js","components/ranking.js","features/pages/mainPage.js","features/post/post.js","features/answer/answerItem.js","features/answer/answerList.js","features/answer/addAnswerModal.js","features/pages/postPage.js","App.js","Web3.js","serviceWorker.js","index.js"],"names":["postSlice","createSlice","name","initialState","init","postList","reducers","setPostList","state","action","payload","map","ele","id","actions","selectPost","post","answerSlice","answerList","setAnswerList","selectAnswer","answer","configureStore","reducer","postReducer","answerReducer","getWeb3","Promise","resolve","reject","provider","Web3","providers","HttpProvider","web3","console","log","ContractAPI","this","accounts","networkId","deployedNetwork","contract","gas","ACCOUNT_CREATE_ETHER_FEE","TOKEN_VALUE","INIT_TOKENS","MIN_POST_CREATE_TOKEN_FEE","eth","getAccounts","net","getId","AppContract","networks","Contract","abi","address","initConstant","getAccountCreateEtherFee","getTokenValue","getInitTokens","getMinPostCreateTokenFee","methods","call","title","content","tokens","tags","addPost","send","from","getPosts","postIds","getPostsByIds","postId","addAnswer","getAnswers","answerIds","getAnswersByIds","answerId","increaseUpVotes","increaseDownVotes","createAccount","value","getAccountInfo","ether2token","token2ether","ContractContext","createContext","children","useState","contractAPI","setContractAPI","useEffect","a","api","Provider","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","flex","cursor","offset","mixins","toolbar","HideOnScroll","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","classes","history","useHistory","useContext","handleSignUp","res","error","isUser","setIsUser","userDisplay","setUserDisplay","userAddress","className","position","color","Toolbar","style","minHeight","Typography","variant","onClick","push","Button","relativeTime","require","timeFromNow","timestamp","dayjs","fromNow","getBlockStyle","block","getType","RichDisplayer","props","displayerState","blockStyleFn","editorState","readOnly","width","marginBottom","marginTop","chip","marginLeft","PostItem","author","displayTime","EditorState","createEmpty","setDisplayerState","createWithContent","convertFromRaw","JSON","parse","Card","CardActionArea","component","Link","to","CardContent","noWrap","CardActions","disableSpacing","Box","tag","Chip","size","label","key","RichEditor","focus","refs","editor","onChange","setEditorState","handleKeyCommand","command","_handleKeyCommand","onTab","e","_onTab","toggleBlockType","type","_toggleBlockType","toggleInlineStyle","_toggleInlineStyle","newState","RichUtils","blockType","inlineStyle","contentState","getCurrentContent","hasText","getBlockMap","first","onToggle","customStyleMap","styleMap","placeholder","ref","spellCheck","React","Component","CODE","backgroundColor","fontFamily","fontSize","padding","StyleButton","preventDefault","active","onMouseDown","BLOCK_TYPES","BlockStyleControls","selection","getSelection","getBlockForKey","getStartKey","INLINE_STYLES","InlineStyleControls","currentStyle","getCurrentInlineStyle","has","tagList","typography","textAlign","postTitle","tokenTextFiled","margin","box","border","borderRadius","none","AddPostModal","addPostDialogOpen","setAddPostDialogOpen","setNewPost","setTitle","token","setToken","userToken","setUserToken","chosedTagList","setChosedTagList","unchosedTagList","setUnchosedTagList","open","message","status","snackbarProp","setSnackbarProp","user","Dialog","onClose","scroll","fullWidth","maxWidth","DialogTitle","DialogContent","dividers","TextField","currentTarget","InputLabelProps","shrink","inputProps","min","InputProps","endAdornment","InputAdornment","mt","mb","filter","_tag","handleRemoveTag","display","handleAddTag","DialogActions","Number","confirmed","disabled","Snackbar","autoHideDuration","Alert","severity","PostList","useSelector","postFilter","newPost","handleAddPost","stringify","convertToRaw","err","flexDirection","some","idx","TagList","setPostFilter","rankingList","ranking","alignItems","Ranking","List","ListItem","paddingRight","paddingLeft","Divider","justifyContent","breakpoints","down","flexBasis","Main","dispatch","useDispatch","fetchPostList","Container","answerBtn","avatar","Post","setAddAnswerDialogOpen","CardHeader","Avatar","aria-label","subheader","titleTypographyProps","subheaderTypographyProps","thumbUp","thumbUpIcon","cardHeader","AnswerItem","upVotes","downVotes","parseInt","voteCnt","setVoteCnt","handleClickThumb","IconButton","AnswerList","fetchAnswerList","length","AddAnswerModal","addAnswerDialogOpen","handleAddAnswer","PostPage","postid","useParams","setPost","addRes","getRes","createMuiTheme","h1","h2","h3","h4","h5","h6","palette","primary","main","MyRoute","path","App","store","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f17ac2f4.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const postSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    init: false,\n    postList: [],\n  },\n  reducers: {\n    setPostList: (state, action) => {\n      state.postList = action.payload.map((ele, id) => ({ ...ele, id }));\n      // const testPostList = [\n      //   {\n      //     title: \"Hello World Again\",\n      //     content: \"Allo hahahhah\",\n      //     author: \"0x2A70086F128E1951b5D7a32A9F1d176FC25BB801\",\n      //     tags: [\"Travel\", \"Programming\"],\n      //     timestamp: \"Wed Dec 23 2020 03:07:40 GMT+0800 (Taipei Standard Time)\",\n      //     tokens: 120,\n      //   }]\n    },\n  },\n});\n\nexport const { setPostList } = postSlice.actions;\n\nexport const selectPost = (state) => state.post;\n\nexport default postSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const answerSlice = createSlice({\n  name: \"answer\",\n  initialState: {\n    answerList: [],\n  },\n  reducers: {\n    setAnswerList: (state, action) => {\n      state.answerList = action.payload;\n    },\n  },\n});\n\nexport const { setAnswerList } = answerSlice.actions;\n\nexport const selectAnswer = (state) => state.answer;\n\nexport default answerSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport postReducer from \"../features/post/postSlice\";\nimport answerReducer from \"../features/answer/answerSlice\";\n// import counterReducer from \"../features/counter/counterSlice\";\n\nexport default configureStore({\n  reducer: {\n    // counter: counterReducer,\n    post: postReducer,\n    answer: answerReducer,\n  },\n});\n","import Web3 from \"web3\";\n\n// const getWeb3 = () =>\n//   new Promise((resolve, reject) => {\n//     // Wait for loading completion to avoid race conditions with web3 injection timing.\n//     window.addEventListener(\"load\", async () => {\n//       // Modern dapp browsers...\n//       if (window.ethereum) {\n//         const web3 = new Web3(window.ethereum);\n//         try {\n//           // Request account access if needed\n//           await window.ethereum.enable();\n//           // Acccounts now exposed\n//           resolve(web3);\n//         } catch (error) {\n//           reject(error);\n//         }\n//       }\n//       // Legacy dapp browsers...\n//       else if (window.web3) {\n//         // Use Mist/MetaMask's provider.\n//         const { web3 } = window;\n//         console.log(\"Injected web3 detected.\");\n//         resolve(web3);\n//       }\n//       // Fallback to localhost; use dev console port by default...\n//       else {\n//         const provider = new Web3.providers.HttpProvider(\n//           \"http://127.0.0.1:7545\"\n//         );\n//         const web3 = new Web3(provider);\n//         console.log(\"No web3 instance injected, using Local web3.\");\n//         resolve(web3);\n//       }\n//     });\n//   });\n\n// For Testing\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    const provider = new Web3.providers.HttpProvider(\"http://127.0.0.1:7545\");\n    const web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n    resolve(web3);\n  });\nexport default getWeb3;\n","import AppContract from \"./contracts/App.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nclass ContractAPI {\n  constructor() {\n    this.web3 = null;\n    this.accounts = null;\n    this.networkId = null;\n    this.deployedNetwork = null;\n    this.contract = null;\n\n    this.gas = 1000000;\n\n    // constant\n    this.ACCOUNT_CREATE_ETHER_FEE = null;\n    this.TOKEN_VALUE = null;\n    this.INIT_TOKENS = null;\n    this.MIN_POST_CREATE_TOKEN_FEE = null;\n  }\n\n  // initialize function\n  async init() {\n    this.web3 = await getWeb3();\n    this.accounts = await this.web3.eth.getAccounts();\n    this.networkId = await this.web3.eth.net.getId();\n    this.deployedNetwork = AppContract.networks[this.networkId];\n    this.contract = new this.web3.eth.Contract(\n      AppContract.abi,\n      this.deployedNetwork && this.deployedNetwork.address\n    );\n    console.log(this.web3, this.accounts, this.networkId, this.contract);\n    this.initConstant();\n  }\n\n  async initConstant() {\n    this.ACCOUNT_CREATE_ETHER_FEE = await this.getAccountCreateEtherFee();\n    this.TOKEN_VALUE = await this.getTokenValue();\n    this.INIT_TOKENS = await this.getInitTokens();\n    this.MIN_POST_CREATE_TOKEN_FEE = await this.getMinPostCreateTokenFee();\n    console.log(\n      this.ACCOUNT_CREATE_ETHER_FEE,\n      this.TOKEN_VALUE,\n      this.INIT_TOKENS,\n      this.MIN_POST_CREATE_TOKEN_FEE\n    );\n  }\n\n  // getter function\n  getAccountCreateEtherFee() {\n    return this.contract.methods.getAccountCreateEtherFee().call();\n  }\n\n  getTokenValue() {\n    return this.contract.methods.getTokenValue().call();\n  }\n\n  getInitTokens() {\n    return this.contract.methods.getInitTokens().call();\n  }\n\n  getMinPostCreateTokenFee() {\n    return this.contract.methods.getMinPostCreateTokenFee().call();\n  }\n\n  // mutate function\n  addPost(title, content, tokens, tags) {\n    // assert(tokens > this.MIN_POST_CREATE_TOKEN_FEE);\n    return this.contract.methods\n      .addPost(title, content, tokens, tags)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  getPosts() {\n    return this.contract.methods.getPosts().call();\n  }\n\n  getPostsByIds(postIds) {\n    // array\n    return this.contract.methods.getPostsByIds(postIds).call();\n  }\n\n  addAnswer(postId, content) {\n    return this.contract.methods\n      .addAnswer(postId, content)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  getAnswers(postId) {\n    return this.contract.methods.getAnswers(postId).call();\n  }\n\n  getAnswersByIds(answerIds) {\n    // array\n    return this.contract.methods.getAnswersByIds(answerIds).call();\n  }\n\n  increaseUpVotes(answerId) {\n    return this.contract.methods\n      .increaseUpVotes(answerId)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  increaseDownVotes(answerId) {\n    return this.contract.methods\n      .increaseDownVotes(answerId)\n      .send({ from: this.accounts[0], gas: this.gas });\n  }\n\n  createAccount() {\n    console.log(this.ACCOUNT_CREATE_ETHER_FEE);\n    return this.contract.methods.createAccount().send({\n      from: this.accounts[0],\n      value: this.ACCOUNT_CREATE_ETHER_FEE,\n      gas: this.gas,\n    });\n  }\n\n  getAccountInfo() {\n    return this.contract.methods.getAccountInfo().call({\n      from: this.accounts[0],\n    });\n  }\n\n  ether2token() {\n    return this.contract.methods.ether2token().call().send({\n      from: this.accounts[0],\n      gas: this.gas,\n    });\n  }\n\n  token2ether(tokens) {\n    return this.contract.methods.token2ether(tokens).call();\n  }\n}\n\nexport default ContractAPI;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport ContractAPI from \"./contractApi\";\n\nconst ContractContext = createContext(null);\n\nexport { ContractContext };\n\nexport default ({ children }) => {\n  const [contractAPI, setContractAPI] = useState(null);\n\n  useEffect(async () => {\n    const api = new ContractAPI();\n    await api.init();\n    setContractAPI(api);\n  }, []);\n  return (\n    <ContractContext.Provider value={contractAPI}>\n      {children}\n    </ContractContext.Provider>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Bar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport { ContractContext } from \"../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flex: 1,\n    cursor: \"pointer\",\n  },\n  offset: theme.mixins.toolbar,\n}));\n\nfunction HideOnScroll({ children }) {\n  const trigger = useScrollTrigger();\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nexport default function AppBar() {\n  const classes = useStyles();\n  const history = useHistory();\n  const contractAPI = useContext(ContractContext);\n  const handleClick = () => {\n    history.push(\"/\");\n  };\n  const handleSignUp = async () => {\n    try {\n      const res = await contractAPI.createAccount();\n      console.log(res);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // user display\n  const [isUser, setIsUser] = useState(false);\n  const [userDisplay, setUserDisplay] = useState(\"Sign Up\");\n  useEffect(async () => {\n    if (contractAPI) {\n      try {\n        const res = await contractAPI.getAccountInfo();\n        console.log(res);\n        setUserDisplay(res.userAddress);\n        setIsUser(true);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [contractAPI]);\n\n  return (\n    <div className={classes.root}>\n      <HideOnScroll>\n        <Bar position=\"fixed\" color=\"primary\">\n          <Toolbar style={{ minHeight: \"56px\" }}>\n            {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n            <Typography\n              variant=\"h1\"\n              className={classes.title}\n              onClick={() => handleClick()}\n            >\n              知識+ D-App\n            </Typography>\n            {isUser ? (\n              <Button color=\"inherit\">{userDisplay}</Button>\n            ) : (\n              <Button color=\"inherit\" onClick={handleSignUp}>\n                {userDisplay}\n              </Button>\n            )}\n          </Toolbar>\n        </Bar>\n      </HideOnScroll>\n      <div className={classes.offset} />\n    </div>\n  );\n}\n","import * as dayjs from \"dayjs\";\n\nconst relativeTime = require(\"dayjs/plugin/relativeTime\");\n\nexport function timeFromNow(timestamp) {\n  dayjs.extend(relativeTime);\n  return dayjs.unix(timestamp).fromNow();\n}\n","import React, { useState } from 'react';\nimport { Editor } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport './textEditor.css'\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote': return 'RichEditor-blockquote';\n    default: return null;\n  }\n}\n\nconst RichDisplayer = (props) => {\n  const { displayerState } = props\n\n  return (\n    <div className=\"RichDisplayer-root\">\n      <div className=\"RichEditor-editor\">\n        <Editor\n          blockStyleFn={getBlockStyle}\n          editorState={displayerState}\n          readOnly\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default RichDisplayer;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { Link } from \"react-router-dom\";\nimport { timeFromNow } from \"../../utils\";\n\nimport { EditorState, convertFromRaw } from 'draft-js';\nimport RichTextDisplayer from \"../utils/textDisplayer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n  },\n  chip: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n    marginBottom: theme.spacing(0.5)\n  },\n}));\n\nconst PostItem = ({ title, content, author, tags, timestamp, id, tokens }) => {\n  const classes = useStyles();\n  const displayTime = timeFromNow(timestamp);\n\n  const [displayerState, setDisplayerState] = useState(\n    () => EditorState.createEmpty(),\n  )\n\n  useEffect(() => {\n    if (content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\n      );\n    }\n  }, [content])\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardActionArea component={Link} to={`/post/${id}`}>\n        <CardContent>\n          <Typography variant=\"h1\">\n            {\" \"}\n            <strong>\n              {title} [{tokens} csb]\n            </strong>{\" \"}\n          </Typography>\n          <RichTextDisplayer displayerState={displayerState} />\n          <Typography variant=\"body2\" color=\"textSecondary\" noWrap>\n            creator: {author}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {displayTime}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing style={{}}>\n          <Box>\n            {tags.map((tag) => (\n              <Chip\n                className={classes.chip}\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"small\"\n                label={tag}\n                key={tag}\n              />\n            ))}\n          </Box>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default PostItem;\n","import React, { useState } from 'react';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport './textEditor.css'\n\nclass RichEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {editorState: EditorState.createEmpty()};\n\n    this.focus = () => this.refs.editor.focus();\n    this.onChange = (editorState) => this.props.setEditorState(editorState);\n\n    this.handleKeyCommand = (command) => this._handleKeyCommand(command);\n    this.onTab = (e) => this._onTab(e);\n    this.toggleBlockType = (type) => this._toggleBlockType(type);\n    this.toggleInlineStyle = (style) => this._toggleInlineStyle(style);\n  }\n\n  _handleKeyCommand(command) {\n    const { editorState } = this.props;\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n    if (newState) {\n      this.onChange(newState);\n      return true;\n    }\n    return false;\n  }\n\n  _onTab(e) {\n    const maxDepth = 4;\n    this.onChange(RichUtils.onTab(e, this.props.editorState, maxDepth));\n  }\n\n  _toggleBlockType(blockType) {\n    this.onChange(\n      RichUtils.toggleBlockType(\n        this.props.editorState,\n        blockType\n      )\n    );\n  }\n\n  _toggleInlineStyle(inlineStyle) {\n    this.onChange(\n      RichUtils.toggleInlineStyle(\n        this.props.editorState,\n        inlineStyle\n      )\n    );\n  }\n\n  render() {\n    const { editorState } = this.props;\n\n    // If the user changes block type before entering any text, we can\n    // either style the placeholder or hide it. Let's just hide it now.\n    let className = 'RichEditor-editor';\n    var contentState = editorState.getCurrentContent();\n    if (!contentState.hasText()) {\n      if (contentState.getBlockMap().first().getType() !== 'unstyled') {\n        className += ' RichEditor-hidePlaceholder';\n      }\n    }\n\n    return (\n      <div className=\"RichEditor-root\">\n        <BlockStyleControls\n          editorState={editorState}\n          onToggle={this.toggleBlockType}\n        />\n        <InlineStyleControls\n          editorState={editorState}\n          onToggle={this.toggleInlineStyle}\n        />\n        <div className={className} onClick={this.focus}>\n          <Editor\n            blockStyleFn={getBlockStyle}\n            customStyleMap={styleMap}\n            editorState={editorState}\n            handleKeyCommand={this.handleKeyCommand}\n            onChange={this.onChange}\n            onTab={this.onTab}\n            placeholder=\"Write down your idea here...\"\n            ref=\"editor\"\n            spellCheck={true}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote': return 'RichEditor-blockquote';\n    default: return null;\n  }\n}\n\nclass StyleButton extends React.Component {\n  constructor() {\n    super();\n    this.onToggle = (e) => {\n      e.preventDefault();\n      this.props.onToggle(this.props.style);\n    };\n  }\n\n  render() {\n    let className = 'RichEditor-styleButton';\n    if (this.props.active) {\n      className += ' RichEditor-activeButton';\n    }\n\n    return (\n      <span className={className} onMouseDown={this.onToggle}>\n        {this.props.label}\n      </span>\n    );\n  }\n}\n\nconst BLOCK_TYPES = [\n  { label: 'H1', style: 'header-one' },\n  { label: 'H2', style: 'header-two' },\n  { label: 'H3', style: 'header-three' },\n  { label: 'H4', style: 'header-four' },\n  { label: 'H5', style: 'header-five' },\n  { label: 'H6', style: 'header-six' },\n  { label: '\"Blockquote\"', style: 'blockquote' },\n  { label: 'UL', style: 'unordered-list-item' },\n  { label: 'OL', style: 'ordered-list-item' },\n  { label: 'Code Block', style: 'code-block' },\n];\n\nconst BlockStyleControls = (props) => {\n  const { editorState } = props;\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className=\"RichEditor-controls\">\n      {BLOCK_TYPES.map((type) =>\n        <StyleButton\n          key={type.label}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n\nvar INLINE_STYLES = [\n  { label: 'Bold', style: 'BOLD' },\n  { label: 'Italic', style: 'ITALIC' },\n  { label: 'Underline', style: 'UNDERLINE' },\n  { label: 'Monospace', style: 'CODE' },\n];\n\nconst InlineStyleControls = (props) => {\n  var currentStyle = props.editorState.getCurrentInlineStyle();\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map(type =>\n        <StyleButton\n          key={type.label}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={props.onToggle}\n          style={type.style}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RichEditor;","const tagList = [\n  \"Health\",\n  \"Business and Finance\",\n  \"Entertainment\",\n  \"Home\",\n  \"Family\",\n  \"Pets\",\n  \"Children\",\n  \"Government\",\n  \"Education\",\n  \"News\",\n  \"Travel\",\n  \"Vehicle\",\n  \"Electronic Product\",\n  \"Environment\",\n  \"Society\",\n  \"Science\",\n  \"Beauty\",\n  \"Art\",\n  \"Game\",\n  \"Sports\",\n  \"Computer\",\n  \"Food\",\n];\n\nexport default tagList;","import React, { useState, useEffect, useContext } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\nimport Chip from '@material-ui/core/Chip';\n\nimport { Editor, EditorState, convertToRaw, convertFromRaw } from 'draft-js';\n\nimport { ContractContext } from \"../../contractContext\";\nimport RichTextEditor from '../utils/textEditor'\nimport tagList from '../../constant/tagList'\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(1),\n    color: \"#9999\"\n  },\n  postTitle: {\n    fontSize: \"26px\"\n  },\n  tokenTextFiled: {\n    marginTop: theme.spacing(2),\n    width: \"20%\"\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  box: {\n    border: \"solid #c4c4c4 1px\",\n    borderRadius: \"3px\",\n    padding: \"10px\"\n  },\n  none: {\n    color: \"#c4c4c4\"\n  }\n}));\n\nconst AddPostModal = (props) => {\n  const {\n    addPostDialogOpen,\n    setAddPostDialogOpen,\n    editorState,\n    setEditorState,\n    setNewPost\n  } = props;\n\n  const classes = useStyles();\n  const contractAPI = useContext(ContractContext);\n  const [title, setTitle] = useState('');\n  const [token, setToken] = useState(0);\n  const [userToken, setUserToken] = useState(0);\n  const [chosedTagList, setChosedTagList] = useState([]);\n  const [unchosedTagList, setUnchosedTagList] = useState(tagList);\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: '',\n    status: 'null'\n  });\n\n  const handleAddButtonClick = () => {\n    if (Number(token) < contractAPI.MIN_POST_CREATE_TOKEN_FEE) {\n      setSnackbarProp({\n        open: true,\n        message: `The minimum amount of bounty is ${contractAPI.MIN_POST_CREATE_TOKEN_FEE}!`,\n        status: 'error'\n      });\n      return;\n    }\n    if (Number(token) > userToken) {\n      setSnackbarProp({\n        open: true,\n        message: `Your tokens are not enough!`,\n        status: 'error'\n      });\n      return;\n    }\n    setNewPost({\n      title: title,\n      tokens: Number(token),\n      tags: chosedTagList,\n      confirmed: true\n    });\n    setAddPostDialogOpen(false);\n  }\n\n  const handleAddTag = (tag) => {\n    setChosedTagList([...chosedTagList, tag]);\n    setUnchosedTagList(unchosedTagList.filter(_tag => _tag !== tag));\n  }\n\n  const handleRemoveTag = (tag) => {\n    setUnchosedTagList([...unchosedTagList, tag]);\n    setChosedTagList(chosedTagList.filter(_tag => _tag !== tag));\n  }\n\n  useEffect(async () => {\n    if (contractAPI) {\n      const user = await contractAPI.getAccountInfo();\n      setUserToken(user.tokens)\n    }\n  }, [contractAPI])\n\n  return (\n    <Dialog\n      open={addPostDialogOpen}\n      onClose={() => setAddPostDialogOpen(false)}\n      scroll=\"paper\"\n      fullWidth={true}\n      maxWidth=\"lg\"\n    >\n      <DialogTitle id=\"scroll-dialog-title\">\n        <Typography variant=\"h1\">\n          Ask Question\n        </Typography>\n      </DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          value={title}\n          variant=\"outlined\"\n          onChange={e => setTitle(e.currentTarget.value)}\n          InputLabelProps={{ shrink: false }}\n          inputProps={{ className: classes.postTitle }}\n          placeholder=\"Enter your title here\"\n          fullWidth\n        />\n        <TextField\n          className={classes.tokenTextFiled}\n          size=\"small\"\n          value={token}\n          onChange={e => setToken(e.currentTarget.value)}\n          label=\"Bounty\"\n          inputProps={{ type: 'number', min: \"0\" }}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">csb</InputAdornment>\n          }}\n          variant=\"outlined\"\n        />\n        <Box mt={1} mb={1} className={classes.box}>\n          <Typography>Tags</Typography>\n          {\n            chosedTagList.map(tag =>\n              <Chip\n                className={classes.chip}\n                variant=\"outlined\"\n                label={tag}\n                onClick={() => handleRemoveTag(tag)}\n                color=\"primary\"\n              />\n            )\n          }\n        </Box>\n        <Typography variant=\"overline\" display=\"block\" className={classes.typography}>\n          ---- Choose your tag from below ----\n        </Typography>\n        {unchosedTagList.map(tag =>\n          <Chip\n            className={classes.chip}\n            variant=\"outlined\"\n            label={tag}\n            onClick={() => handleAddTag(tag)}\n            color=\"primary\"\n          />\n        )}\n\n        <Box mt={2}>\n          <Typography variant=\"overline\" display=\"block\" className={classes.typography}>\n            ---- Describe your question below ----\n          </Typography>\n        </Box>\n        {editorState ?\n          <RichTextEditor editorState={editorState} setEditorState={setEditorState} /> :\n          <></>\n        }\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => setAddPostDialogOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleAddButtonClick}\n          color=\"primary\"\n          disabled={!title}\n        >\n          Ask\n        </Button>\n      </DialogActions>\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}>\n        <Alert severity={snackbarProp.status}>\n          {snackbarProp.message}\n        </Alert>\n      </Snackbar>\n    </Dialog>\n\n  )\n}\n\nexport default AddPostModal;","import React, { useContext, useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { EditorState, convertToRaw } from 'draft-js';\n\nimport { selectPost, setPostList } from \"./postSlice\";\n// import { Web3Context } from \"../../Web3\";\nimport { ContractContext } from \"../../contractContext\";\n\n\nimport PostItem from \"./postItem\";\nimport AddPostModal from \"./addPostModal\"\n\nconst PostList = (props) => {\n  // Initialize\n  const { postList } = useSelector(selectPost);\n  const contractAPI = useContext(ContractContext);\n  const { postFilter } = props;\n\n  const [newPost, setNewPost] = useState({\n    title: '',\n    tokens: 0,\n    tags: [],\n    confirmed: false\n  });\n  const [addPostDialogOpen, setAddPostDialogOpen] = useState(false);\n  const [editorState, setEditorState] = useState(\n    () => EditorState.createEmpty(),\n  );\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: '',\n    status: 'null'\n  });\n\n  // Ask Queston\n  const handleAddPost = async () => {\n    const payload = {\n      title: newPost.title,\n      content: JSON.stringify(convertToRaw(editorState.getCurrentContent())),\n      tokens: newPost.tokens,\n      tags: newPost.tags,\n    }\n    console.log('new post payload', payload)\n    try {\n      const res = contractAPI.addPost(payload.title, payload.content, payload.tokens, payload.tags);\n      console.log(res);\n      setSnackbarProp({\n        open: true,\n        message: `New question added!`,\n        status: 'success'\n      })\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    if (newPost && newPost.confirmed) handleAddPost()\n  }, [newPost])\n\n  // useEffect(async () => {\n  //   if (contractAPI) {\n  //     const user = await contractAPI.getAccountInfo()\n  //     console.log('user', user.tokens)\n  //   }\n  // }, [contractAPI])\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <Typography variant=\"h2\" style={{ flexGrow: 1 }}>\n          Questions\n        </Typography>\n        <Button\n          // className={classes.answerBtn}\n          size=\"medium\"\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={() => setAddPostDialogOpen(true)}\n        >\n          Ask Questions\n        </Button>\n      </div>\n      {postList.filter(post => {\n        if (!postFilter) return true\n        else {\n          return post.tags.some(tag => tag === postFilter)\n        }\n      }).map((post, idx) => (\n        <PostItem {...post} key={idx} />\n      ))}\n      <AddPostModal\n        addPostDialogOpen={addPostDialogOpen}\n        setAddPostDialogOpen={setAddPostDialogOpen}\n        editorState={editorState}\n        setEditorState={setEditorState}\n        setNewPost={setNewPost}\n      />\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}>\n        <Alert severity={snackbarProp.status}>\n          {snackbarProp.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default PostList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport tagList from '../../constant/tagList'\n\n// const tagList = [\n//   \"health\",\n//   \"Business and Finance\",\n//   \"Entertainment\",\n//   \"Home\",\n//   \"Family\",\n//   \"Pets\",\n//   \"Children\",\n//   \"Government\",\n//   \"Education\",\n//   \"News\",\n//   \"Travel\",\n//   \"Vehicle\",\n//   \"Electronic Product\",\n//   \"Environment\",\n//   \"Society\",\n//   \"Science\",\n//   \"Beauty\",\n//   \"Art\",\n//   \"Game\",\n//   \"Sports\",\n//   \"Computer\",\n//   \"Food\",\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  tag: {\n    marginTop: theme.spacing(1.5),\n    cursor: \"pointer\",\n  },\n}));\n\nconst TagList = (props) => {\n  const classes = useStyles();\n  const { setPostFilter } = props;\n  return (\n    <div>\n      <Typography variant=\"h2\" color=\"initial\">\n        Catagories\n      </Typography>\n      <Typography\n        className={classes.tag}\n        variant=\"body2\"\n        color=\"textSecondary\"\n        key='All'\n        onClick={() => setPostFilter(null)}\n      >\n        All\n      </Typography>\n      {tagList.map((tag) => (\n        <Typography\n          className={classes.tag}\n          variant=\"body2\"\n          color=\"textSecondary\"\n          key={tag}\n          onClick={() => setPostFilter(tag)}\n        >\n          {tag}\n        </Typography>\n      ))}\n    </div>\n  );\n};\n\nexport default TagList;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst rankingList = [\n  {\n    id: \"0xA621ac2553470963c155475001D1d4fff36eeD68\",\n    token: 999999,\n  },\n  {\n    id: \"0x2A70086F128E1951b5D7a32A9F1d176FC25BB801\",\n    token: 888888,\n  },\n  {\n    id: \"0x2A70086F128E1951b5D7a32A9F1d176FC25BB801\",\n    token: 777773,\n  },\n  {\n    id: \"0x2A70086F128E1951b5D7a32A9F1d176FC25BB801\",\n    token: 885555,\n  },\n  {\n    id: \"0x2A70086F128E1951b5D7a32A9F1d176FC25BB801\",\n    token: 435348,\n  },\n  {\n    id: \"0x2A70086F128E1951b5D7a32A9F1d176FC25BB801\",\n    token: 234888,\n  },\n  {\n    id: \"0x2A70086F128E1951b5D7a32A9F1d176FC25BB801\",\n    token: 188888,\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  ranking: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Ranking = () => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Typography variant=\"h2\">Ranking</Typography>\n      <List>\n        {rankingList.map(({ id, token }, idx) => (\n          <div key={idx}>\n            <ListItem style={{ paddingRight: 0, paddingLeft: 0 }}>\n              <div className={classes.ranking}>\n                <Typography style={{ margin: 8 }} variant=\"h3\" color=\"initial\">\n                  <strong>{`${idx + 1}`}</strong>\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  style={{ flexGrow: 1 }}\n                  noWrap\n                >\n                  {id}...\n                </Typography>\n                <Typography variant=\"body1\" color=\"textSecondary\">\n                  {token}\n                </Typography>\n              </div>\n            </ListItem>\n            <Divider />\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default Ranking;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport PostList from \"../post/postList\";\nimport TagList from \"../tagList\";\nimport Ranking from \"../../components/ranking\";\nimport { setPostList } from \"../post/postSlice\";\n\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n    justifyContent: \"space-evenly\",\n  },\n  tagList: {\n    // width: \"20%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n  postList: {\n    flexBasis: \"800px\",\n    maxWidth: '60%',\n    marginRight: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n  ranking: {\n    flexBasis: \"180px\",\n    maxWidth: \"240px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst Main = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const contractAPI = useContext(ContractContext);\n  const [postFilter, setPostFilter] = useState(null)\n\n  // Initialize Post List\n  useEffect(async () => {\n    if (contractAPI) {\n      const fetchPostList = await contractAPI.getPosts();\n      dispatch(setPostList(fetchPostList));\n    }\n  }, [contractAPI]);\n\n  return (\n    <Container className={classes.root}>\n      <div className={classes.tagList}>\n        <TagList setPostFilter={setPostFilter} />\n      </div>\n      <div className={classes.postList}>\n        <PostList postFilter={postFilter} />\n      </div>\n      <div className={classes.ranking}>\n        <Ranking />\n      </div>\n    </Container>\n  );\n};\n\nexport default Main;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n// import CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport { timeFromNow } from \"../../utils\";\n\nimport { EditorState, convertFromRaw } from 'draft-js';\nimport RichTextDisplayer from \"../utils/textDisplayer\";\n\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1),\n  },\n  answerBtn: {\n    borderRadius: \"30px\",\n  },\n  avatar: {\n    backgroundColor: \"gray\",\n  },\n}));\n\nconst Post = ({ title, content, author, tags, id, timestamp, tokens, setAddAnswerDialogOpen }) => {\n  const classes = useStyles();\n  const displayTime = timeFromNow(timestamp);\n  const contractAPI = useContext(ContractContext);\n  const [displayerState, setDisplayerState] = useState(\n    () => EditorState.createEmpty(),\n  )\n\n  useEffect(() => {\n    if (content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\n      );\n    }\n  }, [content])\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            A\n          </Avatar>\n        }\n        subheader={displayTime}\n        title={author}\n        titleTypographyProps={{ noWrap: true }}\n        subheaderTypographyProps={{ noWrap: true }}\n      />\n      <CardContent>\n        <Typography variant=\"h1\">\n          <strong>\n            {title} [{tokens} csb]\n          </strong>\n        </Typography>\n        <RichTextDisplayer displayerState={displayerState} />\n      </CardContent>\n      <CardActions>\n        <Button\n          className={classes.answerBtn}\n          size=\"medium\"\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={() => setAddAnswerDialogOpen(true)}\n        >\n          + Answer\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\n\nimport { EditorState, convertFromRaw } from 'draft-js';\n\nimport { timeFromNow } from \"../../utils\";\n\nimport ContractContext from \"../../contractContext\";\nimport RichTextDisplayer from \"../utils/textDisplayer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"block\",\n    border: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n  },\n  avatar: {\n    backgroundColor: \"gray\",\n  },\n  content: {\n    display: \"flex\",\n  },\n  thumbUp: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  thumbUpIcon: {\n    fontSize: theme.spacing(6),\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: theme.spacing(4),\n    },\n  },\n  cardHeader: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst AnswerItem = ({ content, author, timestamp, downVotes, upVotes }) => {\n  const classes = useStyles();\n  const contractAPI = useContext(ContractContext);\n  const [voteCnt, setVoteCnt] = useState(parseInt(upVotes)); // votes type are string!\n\n  const [displayerState, setDisplayerState] = useState(\n    () => EditorState.createEmpty(),\n  )\n\n  const displayTime = timeFromNow(timestamp);\n  const handleClickThumb = async () => {\n    // const res = await contractAPI.increaseUpVotes();\n    // console.log(res);\n    setVoteCnt(voteCnt + 1);\n  };\n\n  useEffect(() => {\n    if (content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(content)))\n      );\n    }\n  }, [content])\n\n  return (\n    <ListItem className={classes.root} component={Card} variant=\"outlined\">\n      <div className={classes.content}>\n        <div className={classes.thumbUp}>\n          <IconButton\n            aria-label=\"This is a good answer\"\n            color=\"primary\"\n            onClick={handleClickThumb}\n          >\n            <ThumbUpIcon className={classes.thumbUpIcon} />\n          </IconButton>\n          <Typography variant=\"h3\" color=\"primary\">\n            {voteCnt}\n          </Typography>\n        </div>\n        <div style={{ width: '100%' }}>\n          <CardHeader\n            className={classes.cardHeader}\n            avatar={\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                A\n              </Avatar>\n            }\n            // action={\n            //   <IconButton aria-label=\"This is a good answer\">\n            //     <ThumbUpIcon />\n            //   </IconButton>\n            // }\n            title={author}\n            subheader={displayTime}\n          />\n          <CardContent>\n            <RichTextDisplayer displayerState={displayerState} />\n          </CardContent>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default AnswerItem;\n","import React, { useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport AnswerItem from \"./answerItem\";\nimport { selectAnswer, setAnswerList } from \"./answerSlice\";\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  answerList: {\n    border: \"1px solid rgba(0, 0, 0, 0.12)\",\n    borderRadius: \"4px\",\n    padding: 0,\n  },\n}));\n\nconst AnswerList = ({ post }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const contractAPI = useContext(ContractContext);\n  const { answerList } = useSelector(selectAnswer);\n  useEffect(async () => {\n    if (post) {\n      const fetchAnswerList = await contractAPI.getAnswers(post.id);\n      console.log(fetchAnswerList);\n      dispatch(setAnswerList(fetchAnswerList));\n    }\n  }, [post]);\n  return (\n    <div>\n      <Toolbar>\n        <Typography variant=\"h2\" color=\"initial\">\n          {answerList.length} answers\n        </Typography>\n      </Toolbar>\n      <List className={classes.answerList}>\n        {answerList.map((answer, idx) => (\n          <div key={idx}>\n            <AnswerItem {...answer} />\n            <Divider />\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default AnswerList;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { EditorState, convertFromRaw } from 'draft-js';\nimport RichTextDisplayer from '../utils/textDisplayer'\nimport RichTextEditor from '../utils/textEditor'\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    textAlign: \"center\",\n    marginBottom: theme.spacing(1),\n    color: \"#9999\"\n  }\n}));\n\nconst AddAnswerModal = (props) => {\n  const {\n    addAnswerDialogOpen,\n    setAddAnswerDialogOpen,\n    post,\n    editorState,\n    setEditorState,\n    handleAddAnswer\n  } = props;\n\n  const classes = useStyles();\n  const [displayerState, setDisplayerState] = useState(\n    () => EditorState.createEmpty(),\n  )\n\n  const handleAddButtonClick = () => {\n    handleAddAnswer();\n    setAddAnswerDialogOpen(false);\n  }\n\n  useEffect(() => {\n    if (post && post.content) {\n      setDisplayerState(\n        EditorState.createWithContent(convertFromRaw(JSON.parse(post.content)))\n      );\n    }\n  }, [post])\n\n  return (\n    <>\n      {\n        post ?\n          <Dialog\n            open={addAnswerDialogOpen}\n            onClose={() => setAddAnswerDialogOpen(false)}\n            scroll=\"body\"\n            fullWidth={true}\n            maxWidth=\"lg\"\n          >\n            <DialogTitle id=\"scroll-dialog-title\">\n              <Card variant=\"outlined\">\n                <CardContent>\n                  <Typography variant=\"h1\">\n                    <strong>\n                      {post.title} [{post.tokens} csb]\n                    </strong>\n                  </Typography>\n                  <RichTextDisplayer displayerState={displayerState} />\n                </CardContent>\n              </Card>\n            </DialogTitle>\n            <DialogContent dividers>\n              <Typography variant=\"overline\" display=\"block\" className={classes.typography}>\n                ---- Write your answer below ----\n              </Typography>\n              {editorState ?\n                <RichTextEditor editorState={editorState} setEditorState={setEditorState} /> :\n                <></>\n              }\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={() => setAddAnswerDialogOpen(false)} color=\"primary\">\n                Cancel\n              </Button>\n              <Button onClick={handleAddButtonClick} color=\"primary\">\n                Add\n              </Button>\n            </DialogActions>\n          </Dialog> :\n          <></>\n      }\n    </>\n\n  )\n}\n\nexport default AddAnswerModal;","import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nimport { EditorState, convertToRaw } from 'draft-js';\n\nimport Post from \"../post/post\";\nimport AnswerList from \"../answer/answerList\";\nimport AddAnswerModal from '../answer/addAnswerModal';\n\n// import { selectPost, setPostList } from \"../post/postSlice\";\nimport { ContractContext } from \"../../contractContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    marginTop: theme.spacing(2),\n    justifyContent: \"center\",\n  },\n  content: {\n    width: \"80%\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst PostPage = () => {\n  const classes = useStyles();\n  const contractAPI = useContext(ContractContext);\n  const { postid } = useParams();\n\n  const [post, setPost] = useState(null);\n  const [addAnswerDialogOpen, setAddAnswerDialogOpen] = useState(false);\n  const [editorState, setEditorState] = useState(\n    () => EditorState.createEmpty(),\n  );\n  const [snackbarProp, setSnackbarProp] = useState({\n    open: false,\n    message: '',\n    status: 'null'\n  });\n\n  const handleAddAnswer = async () => {\n    if (contractAPI && post) {\n      try {\n        const content = convertToRaw(editorState.getCurrentContent())\n        console.log(post.id);\n        const addRes = await contractAPI.addAnswer(post.id, JSON.stringify(content));\n        console.log(addRes);\n        setEditorState(EditorState.createEmpty())\n        setSnackbarProp({\n          open: true,\n          message: `New answer added!`,\n          status: 'success'\n        })\n        try {\n          const getRes = await contractAPI.getPostsByIds([postid]);\n          console.log(getRes);\n          setPost({ ...getRes[0], id: postid });\n        } catch (err) {\n          console.error(err);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  // Todo: Initialization (fetch post, get user info)\n  // Initialize Post\n  useEffect(async () => {\n    if (contractAPI) {\n      try {\n        const res = await contractAPI.getPostsByIds([postid]);\n        console.log(res);\n        setPost({ ...res[0], id: postid });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [contractAPI]);\n\n  return (\n    <>\n      <Container maxWidth=\"xl\" className={classes.root}>\n        {post ? (\n          <div className={classes.content}>\n            <Post {...post} setAddAnswerDialogOpen={setAddAnswerDialogOpen} />\n            <AnswerList post={post} />\n          </div>\n        ) : (\n            \"Fetching Post ...\"\n          )}\n      </Container>\n\n      <AddAnswerModal\n        addAnswerDialogOpen={addAnswerDialogOpen}\n        setAddAnswerDialogOpen={setAddAnswerDialogOpen}\n        post={post}\n        editorState={editorState}\n        setEditorState={setEditorState}\n\n        handleAddAnswer={handleAddAnswer}\n      />\n      <Snackbar\n        open={snackbarProp.open}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarProp({ ...snackbarProp, open: false })}>\n        <Alert severity={snackbarProp.status}>\n          {snackbarProp.message}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default PostPage;\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport store from \"./store\";\nimport AppBar from \"./components/appBar\";\nimport Main from \"./features/pages/mainPage\";\nimport PostPage from \"./features/pages/postPage\";\n\nimport Web3Provider from \"./Web3\";\nimport ContractProvider from \"./contractContext\";\n\nimport \"./App.css\";\n\nconst theme = createMuiTheme({\n  typography: {\n    // In Chinese and Japanese the characters are usually larger,\n    // so a smaller fontsize may be appropriate.\n    h1: {\n      fontSize: \"2rem\",\n    },\n    h2: {\n      fontSize: \"1.5rem\",\n    },\n    h3: {\n      fontSize: \"1.1rem\",\n    },\n    h4: {\n      fontSize: \"1rem\",\n    },\n    h5: {\n      fontSize: \"0.8rem\",\n    },\n    h6: {\n      fontSize: \"0.6rem\",\n    },\n    fontSize: 16,\n  },\n  palette: {\n    type: \"light\",\n    primary: {\n      main: \"#006AC7\",\n    },\n  },\n});\n\nfunction MyRoute() {\n  return (\n    <BrowserRouter>\n      <AppBar />\n      <Switch>\n        <Route path=\"/post/:postid\">\n          <PostPage />\n        </Route>\n        <Route path=\"/\">\n          <Main />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ContractProvider>\n        {/* <Web3Provider> */}\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <MyRoute />\n        </ThemeProvider>\n        {/* </Web3Provider> */}\n      </ContractProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport AppContract from \"./contracts/App.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nconst Web3Context = createContext(null);\n\nexport { Web3Context };\n\nexport default ({ children }) => {\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n\n  useEffect(async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = AppContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        AppContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n      console.log(accounts, networkId, deployedNetwork, instance);\n\n      setWeb3(web3);\n      setAccounts(accounts);\n      setContract(instance);\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`\n      );\n      console.error(error);\n    }\n  }, []);\n\n  return (\n    <Web3Context.Provider value={{ web3, accounts, contract }}>\n      {children}\n    </Web3Context.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}